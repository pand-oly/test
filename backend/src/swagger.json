{
  "openapi": "3.0.0",
  "info": {
    "title": "Api de usuários um banco",
    "description": "Essa api tem o objetivo de criar novos usuários e manipular seu saldo na conta",
    "contact": {
      "name": "Henrique Oliveira",
      "url": "https://github.com/pand-oly",
      "email": "hoa98hoa@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/",
      "description": "Api documentation"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Cadastro de novo usuários",
        "description": "Essa rota é responsavel para registro de novo usuário no banco de dados na tabela User, seguindo as regras de nogocio - o nome de usuário deve ter pelo menos 3 caracteries e a a senha seja composta por pelo menos 8 caractere. Cada novo usuário também criado uma conta respectiva para o usuário na tabela Accounts e com um salde(balance) de 100(creditos)",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "register-user": {
                  "value": {
                    "username": "Pand",
                    "password": "Any-password-1"
                  }
                },
                "register-user-invalid-name": {
                  "value": {
                    "username": "P.",
                    "password": "Any-password-1"
                  }
                },
                "register-user-invalid-password": {
                  "value": {
                    "username": "Pand",
                    "password": "1234567"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflic"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Acesso de usuários já cadastrados",
        "description": "Essa rota é responsavel por acessar um usuário no banco de dados e retorna um token",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "login": {
                  "value": {
                    "username": "Pand",
                    "password": "Any-password-1"
                  }
                },
                "login-invalid-name": {
                  "value": {
                    "username": "P.",
                    "password": "Any-password-1"
                  }
                },
                "login-invalid-password": {
                  "value": {
                    "username": "Pand",
                    "password": "1234567"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transaction": {
      "put": {
        "summary": "Rota para a trnsação de credito entre usuários",
        "description": "Um usuário com o token valido pode tranferir creditos seus para um outro usuário cadastrado no banco de dados",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newTransaction"
              },
              "examples": {
                "transaction": {
                  "value": {
                    "debitedAccountId": 1,
                    "creditedAccountId": 2,
                    "value": 80
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "debitedAccountId": {
                      "type": "number"
                    },
                    "creditedAccountId": {
                      "type": "number"
                    },
                    "value": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transaction/{id}": {
      "get": {
        "summary": "Rota para buscar todo historico de transações de um usuário",
        "description": "Um usuário com token valido pode buscar seu historico de transações",
        "tags": ["Transaction"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Account ID, a number in the url that indicates the id of the account in which you want the balance",
            "required": true,
            "schema": {
             "type": "number"
            }
          }
        ],
        "responses": {
          "400": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "examples": {
            "Response case invalid token": {
              "value": {
                "error": "Valid token required"
              }
            }
          }
          },
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/transaction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/balance/{id}": {
      "get": {
        "summary": "Rota para buscar valor do saldo da conta de um usuário",
        "description": "Um usuário com token valido pode buscar seu saldo para imprimir na tela",
        "tags": ["Account"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Account ID, a number in the url that indicates the id of the account in which you want the balance",
            "required": true,
            "schema": {
             "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "examples": {
              "Response case invalid token": {
                "value": {
                  "error": "Valid token required"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "newTransaction": {
        "type": "object",
        "properties": {
          "debitedAccountId": {
            "type": "number"
          },
          "creditedAccountId": {
            "type": "number"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "transaction": {
        "type": "object",
        "properties": {
          "debitedAccountId": {
            "type": "number"
          },
          "creditedAccountId": {
            "type": "number"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}